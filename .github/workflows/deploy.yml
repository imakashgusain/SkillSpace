name: Deploy to EC2

on:
  push:
    branches:
      - main # Triggers when there is a push to the `main` branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'   # Use the AdoptOpenJDK distribution (can also use 'zulu', 'temurin', etc.)
          java-version: '17'

      # Step 3: Build the application with Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Upload the built JAR to the EC2 instance using SCP
      - name: Upload JAR file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "target/SkillSpace-0.0.1-SNAPSHOT.jar" # The JAR file to be uploaded
          target: "/home/ec2-user/SkillSpace-0.0.1-SNAPSHOT.jar" # The path on EC2 where the JAR should be placed

      # Step 5: SSH into the EC2 instance and run the JAR using Docker
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop and remove any existing Docker container
            docker stop my-java-app || true
            docker rm my-java-app || true

            # Run the new JAR file inside a Docker container
            docker run -d --name my-java-app -p 8080:8080 \
              -v /home/ec2-user/SkillSpace-0.0.1-SNAPSHOT.jar:/app/SkillSpace-0.0.1-SNAPSHOT.jar openjdk:17-jdk-slim \
              java -jar /app/SkillSpace-0.0.1-SNAPSHOT.jar
